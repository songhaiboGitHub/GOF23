· 核心作用：
      - 保证一个类只有一个实例，并且提供一个访问该实例的全局访问点。


· 常见应用场景：
      - Windows的Task Manager（任务管理器）就是很典型的单例模式
      - Windows的Recycle bin（回收站）也是很典型的单例应用。在整个系统运行过程中，回收站一直维护着仅有的一个实例。
      - 项目中，读取配置文件的类，一般也只有一个对象。没有必要每次使用配置文件数据，每次new一个对象。
      - 网站的计数器，一般也是采用的单例模式实现，否则难以同步。
      - 应用程序的日志应用，一般都用单例模式实现，这一般是由于共享的日志文件一直处于打开状态，因为只能有一个实例去操作，否则内容不好追加。
      - 数据库连接池的设计一般也是采用单例模式，因为数据库连接是一种数据资源。
      - 操作系统的文件系统，也是大的单例模式实现的具体例子，一个操作系统只能有一个文件系统。
      - Application 也是单例的典型应用（Servlet）。
      - 在Spring中，每个Bean默认就是单例的，这样做的优点是Spring容器可以管理。
      - 在Servlet编程中，每个Servlet也是单例。
      - 在Spring MVC框架/Struts框架中，控制器对象也是单例（action controller）。