· 建造者模式场景：
      - 我们要建造一个复杂的产品。比如：神州飞船，IPhone。这个复杂的产品的创建。有这样一个问题需要处理：
        · 装配这些子组件是不是有个步骤问题？
      - 实际开发中，我们所需要的对象构建时，也非常复杂，有很多步骤需要处理时。

· 建造模式的本质：
      - 分离了对象子组件的单独构造（由Builder来负责）和装配（由Director负责）。从而可以构造出复杂的对象。这个模式适用于：某个对象的构建过程
      复杂的情况下使用。
      - 由于实现了构建和装配的解耦。不同的构建器，相同的装配，也可以做出不同的对象；相同的构建器，不同的装配顺序也可以做出不同的对象。也就是实现
      了构建算法、装配算法的解耦，实现了更好的复用。

· 应用场景
      - StringBuilder类
      - SQL中的preparedStatement
      - JDOM中，DOMBuilder、SAXBuilder